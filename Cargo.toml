[package]
name = "quant-rs"
version = "0.1.0"
edition = "2021"
authors = ["Your Name <your.email@example.com>"]
description = "High-performance Rust sports betting prediction and trading system"
license = "MIT"

[workspace]
members = [
    "crates/api",
    "crates/models", 
    "crates/services",
    "crates/stream",
    "crates/db",
    "crates/ml",
]

[workspace.dependencies]
# Async Runtime
tokio = { version = "1.35", features = ["full"] }
tokio-util = "0.7"

# Web Framework
axum = { version = "0.7", features = ["ws", "macros", "multipart"] }
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace"] }
hyper = "1.0"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# Database
sqlx = { version = "0.7", features = ["postgres", "runtime-tokio-rustls", "migrate", "uuid", "chrono"] }

# Redis/Streaming
redis = { version = "0.24", features = ["tokio-comp", "streams"] }

# ML/Math
linfa = "0.7"
linfa-logistic = "0.7" 
linfa-preprocessing = "0.7"
ndarray = "0.15"
nalgebra = "0.32"

# Financial/Decimal
rust_decimal = { version = "1.32", features = ["serde-float"] }
rust_decimal_macros = "1.32"

# Time/UUID
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.6", features = ["serde", "v4"] }

# Error Handling
anyhow = "1.0"
thiserror = "1.0"

# Logging/Tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
tracing-opentelemetry = "0.22"

# Metrics
prometheus = "0.13"
opentelemetry = "0.21"
opentelemetry-prometheus = "0.14"

# Config
config = "0.13"
dotenvy = "0.15"

# Concurrency
crossbeam = "0.8"
dashmap = "5.5"
parking_lot = "0.12"

# HTTP Client
reqwest = { version = "0.11", features = ["json", "stream"] }

# Testing
proptest = "1.4"
mockall = "0.12"

[dependencies]
tokio = { workspace = true }
axum = { workspace = true }
tower-http = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
anyhow = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
config = { workspace = true }
dotenvy = { workspace = true }
rust_decimal = { workspace = true }
rust_decimal_macros = { workspace = true }

# Workspace crates
quant-api = { path = "crates/api" }
quant-models = { path = "crates/models" }
quant-services = { path = "crates/services" }
quant-stream = { path = "crates/stream" }
quant-db = { path = "crates/db" }
quant-ml = { path = "crates/ml" }

[dev-dependencies]
proptest = { workspace = true }
tokio-test = "0.4"
hyper = { workspace = true }
tower = { workspace = true }
serde_json = { workspace = true }
uuid = { workspace = true, features = ["v4"] }
rand = "0.8"
chrono = { workspace = true }

[profile.dev]
opt-level = 0
debug = true
overflow-checks = true

[profile.release]
opt-level = 3
debug = false
lto = "fat"
codegen-units = 1
panic = "abort"
strip = true

[profile.bench]
opt-level = 3
debug = false
lto = "fat"
codegen-units = 1

# Enable unstable features for better performance
[profile.release.package."*"]
opt-level = 3

# Security lints
[lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"

[lints.clippy]
all = "warn"
pedantic = "warn"
nursery = "warn"
cargo = "warn"
# Allow some pedantic lints that are too strict
module_name_repetitions = "allow"
similar_names = "allow"
too_many_lines = "allow"